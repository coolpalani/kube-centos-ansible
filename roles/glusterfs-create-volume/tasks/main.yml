- name: Create brick directory
  file:
    dest: "/bricks/brick1/brick{{ volume_appendix }}"
    state: directory

- name: Initialize fact for list of nodes
  set_fact:
    host_brick_string: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:/bricks/brick1/brick{{ volume_appendix }} "
    number_hosts: "{{ ( groups['nodes'] | length ) + 1 }}"

- name: Loop through and create "host:/brick/" string given list of nodes
  set_fact:
    host_brick_string: "{{ host_brick_string }}{{ hostvars[item]['ansible_default_ipv4']['address'] }}:/bricks/brick1/brick{{ volume_appendix }} "
  with_items: "{{ groups['nodes'] }}"

# - name: Debug list of gluster volume hosts
#   debug: "msg={{host_brick_string}}"

# - name: Debug number of replicas
#   debug: "msg={{number_hosts}}"

- name: Get list of gluster volumes
  shell: >
    gluster volume list
  register: volume_list

- name: Create glusterFS volume
  shell: >
    gluster volume create glustervol{{ volume_appendix }} replica {{ number_hosts }} transport tcp {{ host_brick_string }}
  when: '"glustervol" ~ volume_appendix not in volume_list.stdout'

- name: Get status of volume
  shell: >
    gluster volume status glustervol{{ volume_appendix }}
  register: volume_status
  ignore_errors: yes

- name: Start gluster volume
  shell: >
    gluster volume start glustervol{{ volume_appendix }}
  when: "volume_status.rc != 0"
